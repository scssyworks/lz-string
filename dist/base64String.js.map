{"version":3,"file":"base64String.js","sources":["../src/base64-string.js"],"sourcesContent":["const _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nconst Base64String = {\n  compressToUTF16(input) {\n    const output = [];\n    let c;\n    let current;\n    let status = 0;\n    input = this.compress(input);\n    for (let i = 0; i < input.length; i++) {\n      c = input.charCodeAt(i);\n      switch (status++) {\n        case 0:\n          output.push(String.fromCharCode((c >> 1) + 32));\n          current = (c & 1) << 14;\n          break;\n        case 1:\n          output.push(String.fromCharCode((current + (c >> 2)) + 32));\n          current = (c & 3) << 13;\n          break;\n        case 2:\n          output.push(String.fromCharCode((current + (c >> 3)) + 32));\n          current = (c & 7) << 12;\n          break;\n        case 3:\n          output.push(String.fromCharCode((current + (c >> 4)) + 32));\n          current = (c & 15) << 11;\n          break;\n        case 4:\n          output.push(String.fromCharCode((current + (c >> 5)) + 32));\n          current = (c & 31) << 10;\n          break;\n        case 5:\n          output.push(String.fromCharCode((current + (c >> 6)) + 32));\n          current = (c & 63) << 9;\n          break;\n        case 6:\n          output.push(String.fromCharCode((current + (c >> 7)) + 32));\n          current = (c & 127) << 8;\n          break;\n        case 7:\n          output.push(String.fromCharCode((current + (c >> 8)) + 32));\n          current = (c & 255) << 7;\n          break;\n        case 8:\n          output.push(String.fromCharCode((current + (c >> 9)) + 32));\n          current = (c & 511) << 6;\n          break;\n        case 9:\n          output.push(String.fromCharCode((current + (c >> 10)) + 32));\n          current = (c & 1023) << 5;\n          break;\n        case 10:\n          output.push(String.fromCharCode((current + (c >> 11)) + 32));\n          current = (c & 2047) << 4;\n          break;\n        case 11:\n          output.push(String.fromCharCode((current + (c >> 12)) + 32));\n          current = (c & 4095) << 3;\n          break;\n        case 12:\n          output.push(String.fromCharCode((current + (c >> 13)) + 32));\n          current = (c & 8191) << 2;\n          break;\n        case 13:\n          output.push(String.fromCharCode((current + (c >> 14)) + 32));\n          current = (c & 16383) << 1;\n          break;\n        case 14:\n          output.push(String.fromCharCode((current + (c >> 15)) + 32, (c & 32767) + 32));\n          status = 0;\n          break;\n      }\n    }\n    output.push(String.fromCharCode(current + 32));\n    return output.join('');\n  },\n  decompressFromUTF16(input) {\n    const output = [];\n    let current;\n    let c;\n    let status = 0;\n    let i = 0;\n    while (i < input.length) {\n      c = input.charCodeAt(i) - 32;\n      switch (status++) {\n        case 0:\n          current = c << 1;\n          break;\n        case 1:\n          output.push(String.fromCharCode(current | (c >> 14)));\n          current = (c & 16383) << 2;\n          break;\n        case 2:\n          output.push(String.fromCharCode(current | (c >> 13)));\n          current = (c & 8191) << 3;\n          break;\n        case 3:\n          output.push(String.fromCharCode(current | (c >> 12)));\n          current = (c & 4095) << 4;\n          break;\n        case 4:\n          output.push(String.fromCharCode(current | (c >> 11)));\n          current = (c & 2047) << 5;\n          break;\n        case 5:\n          output.push(String.fromCharCode(current | (c >> 10)));\n          current = (c & 1023) << 6;\n          break;\n        case 6:\n          output.push(String.fromCharCode(current | (c >> 9)));\n          current = (c & 511) << 7;\n          break;\n        case 7:\n          output.push(String.fromCharCode(current | (c >> 8)));\n          current = (c & 255) << 8;\n          break;\n        case 8:\n          output.push(String.fromCharCode(current | (c >> 7)));\n          current = (c & 127) << 9;\n          break;\n        case 9:\n          output.push(String.fromCharCode(current | (c >> 6)));\n          current = (c & 63) << 10;\n          break;\n        case 10:\n          output.push(String.fromCharCode(current | (c >> 5)));\n          current = (c & 31) << 11;\n          break;\n        case 11:\n          output.push(String.fromCharCode(current | (c >> 4)));\n          current = (c & 15) << 12;\n          break;\n        case 12:\n          output.push(String.fromCharCode(current | (c >> 3)));\n          current = (c & 7) << 13;\n          break;\n        case 13:\n          output.push(String.fromCharCode(current | (c >> 2)));\n          current = (c & 3) << 14;\n          break;\n        case 14:\n          output.push(String.fromCharCode(current | (c >> 1)));\n          current = (c & 1) << 15;\n          break;\n        case 15:\n          output.push(String.fromCharCode(current | c));\n          status = 0;\n          break;\n      }\n      i++;\n    }\n    return this.decompress(output.join(''));\n  },\n  decompress(input) {\n    const output = [];\n    let chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n    let i = 1;\n    let odd = input.charCodeAt(0) >> 8;\n    while (i < input.length * 2 && (i < input.length * 2 - 1 || odd == 0)) {\n      if (i % 2 == 0) {\n        chr1 = input.charCodeAt(i / 2) >> 8;\n        chr2 = input.charCodeAt(i / 2) & 255;\n        if (i / 2 + 1 < input.length)\n          chr3 = input.charCodeAt(i / 2 + 1) >> 8;\n        else\n          chr3 = NaN;\n      } else {\n        chr1 = input.charCodeAt((i - 1) / 2) & 255;\n        if ((i + 1) / 2 < input.length) {\n          chr2 = input.charCodeAt((i + 1) / 2) >> 8;\n          chr3 = input.charCodeAt((i + 1) / 2) & 255;\n        } else\n          chr2 = chr3 = NaN;\n      }\n      i += 3;\n      enc1 = chr1 >> 2;\n      enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n      enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n      enc4 = chr3 & 63;\n      if (isNaN(chr2) || (i == input.length * 2 + 1 && odd)) {\n        enc3 = enc4 = 64;\n      } else if (isNaN(chr3) || (i == input.length * 2 && odd)) {\n        enc4 = 64;\n      }\n      output.push(_keyStr.charAt(enc1));\n      output.push(_keyStr.charAt(enc2));\n      output.push(_keyStr.charAt(enc3));\n      output.push(_keyStr.charAt(enc4));\n    }\n    return output.join('');\n  },\n  compress(input) {\n    const output = [];\n    let ol = 1;\n    let output_;\n    let chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n    let i = 0;\n    let flush = false;\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n    while (i < input.length) {\n      enc1 = _keyStr.indexOf(input.charAt(i++));\n      enc2 = _keyStr.indexOf(input.charAt(i++));\n      enc3 = _keyStr.indexOf(input.charAt(i++));\n      enc4 = _keyStr.indexOf(input.charAt(i++));\n      chr1 = (enc1 << 2) | (enc2 >> 4);\n      chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n      chr3 = ((enc3 & 3) << 6) | enc4;\n      if (ol % 2 == 0) {\n        output_ = chr1 << 8;\n        flush = true;\n        if (enc3 != 64) {\n          output.push(String.fromCharCode(output_ | chr2));\n          flush = false;\n        }\n        if (enc4 != 64) {\n          output_ = chr3 << 8;\n          flush = true;\n        }\n      } else {\n        output.push(String.fromCharCode(output_ | chr1));\n        flush = false;\n        if (enc3 != 64) {\n          output_ = chr2 << 8;\n          flush = true;\n        }\n        if (enc4 != 64) {\n          output.push(String.fromCharCode(output_ | chr3));\n          flush = false;\n        }\n      }\n      ol += 3;\n    }\n    if (flush) {\n      output.push(String.fromCharCode(output_));\n      output = output.join('');\n      output = String.fromCharCode(output.charCodeAt(0) | 256) + output.substring(1);\n    } else {\n      output = output.join('');\n    }\n    return output;\n  }\n};\n\nexport default Base64String;"],"names":["_keyStr","Base64String","compressToUTF16","input","output","c","current","status","compress","i","length","charCodeAt","push","String","fromCharCode","join","decompressFromUTF16","decompress","chr1","chr2","chr3","enc1","enc2","enc3","enc4","odd","NaN","isNaN","charAt","ol","output_","flush","replace","indexOf","substring"],"mappings":"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"}